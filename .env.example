# RAG System MLOps - Environment Configuration Template
# Copy this file to .env and update with your actual values

# ==============================================================================
# AWS CONFIGURATION (Required for production deployment)
# ==============================================================================
# Get these from your AWS account IAM console
AWS_ACCESS_KEY_ID=AKIA...
AWS_SECRET_ACCESS_KEY=your-secret-access-key
AWS_REGION=us-east-1

# S3 bucket for file storage (must be globally unique)
S3_BUCKET=your-rag-system-bucket-unique-name

# ==============================================================================
# PINECONE CONFIGURATION (Required for vector database)
# ==============================================================================
# Get these from your Pinecone account dashboard
PINECONE_API_KEY=your-pinecone-api-key
PINECONE_ENVIRONMENT=your-pinecone-environment
PINECONE_INDEX_NAME=rag-documents

# ==============================================================================
# DATABASE CONFIGURATION
# ==============================================================================
# Local development (auto-configured by docker-compose)
DATABASE_URL=postgresql://raguser:ragpassword@postgres:5432/ragdb

# Production (update with your RDS endpoint)
# DATABASE_URL=postgresql://raguser:ragpassword@your-rds-endpoint:5432/ragdb

# ==============================================================================
# REDIS CONFIGURATION
# ==============================================================================
# Local development (auto-configured by docker-compose)
REDIS_URL=redis://redis:6379

# Production (update with your ElastiCache endpoint)
# REDIS_URL=redis://your-elasticache-endpoint:6379

# ==============================================================================
# AI MODEL CONFIGURATION
# ==============================================================================
# AWS Bedrock model ID for text generation
BEDROCK_MODEL_ID=anthropic.claude-3-sonnet-20240229-v1:0

# Alternative models you can use:
# BEDROCK_MODEL_ID=anthropic.claude-3-haiku-20240307-v1:0
# BEDROCK_MODEL_ID=anthropic.claude-v2

# ==============================================================================
# APPLICATION CONFIGURATION
# ==============================================================================
# Secret key for Streamlit (generate a random string)
STREAMLIT_SECRET_KEY=your-streamlit-secret-key-random-string

# File processing limits
MAX_FILE_SIZE=10485760          # 10MB in bytes
CHUNK_SIZE=1000                 # Characters per chunk
CHUNK_OVERLAP=200               # Character overlap between chunks
MAX_CHUNKS_PER_QUERY=5          # Max chunks to retrieve for each query

# Query processing limits
MAX_QUERY_LENGTH=1000           # Max characters in user query
MAX_RESPONSE_LENGTH=4000        # Max characters in AI response
MAX_SYSTEM_PROMPT_LENGTH=2000   # Max characters in custom system prompt

# Rate limiting (requests per hour per user)
UPLOAD_RATE_LIMIT=5             # File uploads per hour
QUERY_RATE_LIMIT=100            # Questions per hour

# Redis caching
REDIS_TTL=3600                  # Cache TTL in seconds (1 hour)

# Default system prompt for AI responses
DEFAULT_SYSTEM_PROMPT="You are a helpful assistant that answers questions based on the provided documents. Be concise and accurate."

# ==============================================================================
# MONITORING & LOGGING
# ==============================================================================
# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# CloudWatch log group (for AWS deployment)
CLOUDWATCH_LOG_GROUP=/aws/rag-system

# ==============================================================================
# SECURITY CONFIGURATION
# ==============================================================================
# CORS settings (comma-separated origins)
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8501

# JWT settings
JWT_SECRET_KEY=your-jwt-secret-key
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=24

# ==============================================================================
# DEVELOPMENT SETTINGS
# ==============================================================================
# Set to true for development mode
DEBUG=false

# Database connection pool settings
DB_POOL_MIN_SIZE=1
DB_POOL_MAX_SIZE=10

# API timeout settings (seconds)
API_TIMEOUT=30
UPLOAD_TIMEOUT=300

# ==============================================================================
# PRODUCTION OVERRIDES
# ==============================================================================
# Uncomment and modify for production deployment

# Production database with connection pooling
# DATABASE_URL=postgresql://raguser:securepassword@prod-db-endpoint:5432/ragdb?sslmode=require

# Production Redis with auth
# REDIS_URL=redis://:password@prod-redis-endpoint:6379/0

# Production S3 bucket
# S3_BUCKET=prod-rag-system-bucket

# Production domain
# DOMAIN_NAME=your-domain.com

# SSL certificate paths (for custom SSL)
# SSL_CERT_PATH=/etc/ssl/certs/cert.pem
# SSL_KEY_PATH=/etc/ssl/private/key.pem

# ==============================================================================
# MONITORING ENDPOINTS
# ==============================================================================
# Prometheus metrics endpoint
METRICS_ENABLED=true
METRICS_PORT=9090

# Health check endpoints
HEALTH_CHECK_ENABLED=true

# ==============================================================================
# BACKUP CONFIGURATION
# ==============================================================================
# Automatic backup settings
BACKUP_ENABLED=false
BACKUP_S3_BUCKET=your-backup-bucket
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM

# ==============================================================================
# FEATURE FLAGS
# ==============================================================================
# Enable/disable features
ENABLE_FILE_UPLOAD=true
ENABLE_BULK_OPERATIONS=true
ENABLE_ADMIN_PANEL=false
ENABLE_METRICS_DASHBOARD=true

# ==============================================================================
# INTEGRATION SETTINGS
# ==============================================================================
# Slack notifications (optional)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# Email notifications (optional)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password

# ==============================================================================
# NOTES FOR DEPLOYMENT
# ==============================================================================
# 
# LOCAL DEVELOPMENT:
# 1. Copy this file to .env
# 2. Update AWS and Pinecone credentials
# 3. Run: ./setup-local.sh
#
# AWS PRODUCTION:
# 1. Update all production values above
# 2. Run: ./deploy-aws.sh
#
# SECURITY NOTES:
# - Never commit .env files to version control
# - Use strong, unique passwords
# - Rotate keys regularly
# - Enable MFA on AWS account
# - Use least privilege IAM policies
#
# COST OPTIMIZATION:
# - Use appropriate instance sizes
# - Enable auto-scaling
# - Set up billing alerts
# - Monitor usage regularly
#
# ==============================================================================